@model RecipeViewModel
@using RecipesHeaven.Web.ViewModels.Recipe;
@using RecipesHeaven.Web.ViewModels.Comment;

@{
    ViewBag.Title = "Recipe details";
}

<div class="container">
    @{Html.RenderAction("GetCategories", "Category");}
    <div class="col-md-9">
        <div class="thumbnail">
            <img class="img-responsive" style="max-height:300px; width:auto" src="@Model.ImageUrl" alt="">
            <div class="caption-full">
                @*<h4 class="pull-right">$24.99</h4>*@
                <h4>
                    <a href="#">@Model.Name</a>
                </h4>
                @if (Model.Products.Count > 0)
                {
                    <ul>
                        @foreach (var product in Model.Products)
                        {
                            <li>
                                <span> @product.Content</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <text>&nbsp;</text>
                }
                <p> @Model.PreparingSteps</p>
            </div>
        </div>
        <div id="rating-result" class="alert" style="display: none"></div>
        <div class="well" id="rating-block">
            @Html.AntiForgeryToken()
            <label>Rating:</label>
            <div id="rating" style="display:inline-block"></div>
            <p class="pull-right">@Model.NumberOfComments comments</p>
        </div>
        <div class="well">
            @if (User.Identity.IsAuthenticated)
            {
                var commentInput = new CommentInputViewModel() { RecipeId = Model.Id };
                Html.RenderPartial("../../Views/Comment/_CommentInputPartial", commentInput);
            }

            @if (Model.Comments.Count() > 0)
            {
                <div id="comments">
                    @foreach (var comment in Model.Comments.Reverse())
                    {
                        @Html.Partial("../../Views/Comment/_SingleCommentPartial", comment)
                    }
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUnobtrusiveAjax")
    @Scripts.Render("~/bundles/raty")

    <script>
        var antiForgery = $('#rating-block input[name="__RequestVerificationToken"] ').val();
        var recipeId = @Model.Id;

        $('#rating').raty({
            score: @Model.Rating,
            readOnly: @((!User.Identity.IsAuthenticated || Model.IsCurrentUserRatedThis).ToString().ToLower()),
            click: onRate,
        });

        function onRate(value) {
            if (value < 1 || value > 5) {
                alert('Wrong rating value!');
                return false;
            }

            var data = {
                ratedValue: value,
                recipeId: recipeId,
                __RequestVerificationToken: antiForgery
            };

            $.ajax({
                url: '/Rating/LikeRecipe',
                type: 'POST',
                data: data,
                success: onSuccesRate,
                error: onFailRate
            });
        }

        function onSuccesRate() {
            $('#rating-result')
                    .removeClass('alert-danger')
                    .addClass('alert-success')
                    .text('Recipe is rated')
                    .fadeIn(500).delay(2000).fadeOut(500);
            $('#rating').raty('readOnly', true);
        }

        function onFailRate(result) {
            alert(result);
            $('#rating-result')
                    .removeClass('alert-danger')
                    .addClass('alert-danger')
                    .text(result.statusText)
                    .fadeIn();
            return false;
        }
    </script>
}
