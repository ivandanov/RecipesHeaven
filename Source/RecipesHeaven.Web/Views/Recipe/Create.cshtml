@model RecipeInputViewModel

@using RecipesHeaven.Web.ViewModels.Recipe
@{
    ViewBag.Title = "New Recipe";
}

<h2>New Recipe</h2>

<div class="container">
    @using (Html.BeginForm("Create", "Recipe", FormMethod.Post, new { id = "create-form", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationMessage("DataError", new { @class = "text-danger" }, "h1")
        <div class="form-group">
            @Html.LabelFor(r => r.Name, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(r => r.Name, new { @class = "form-control  col-md-4" })
            @Html.ValidationMessageFor(r => r.Name, "", new { @class = "text-danger  col-md-4" })
        </div>
        <div class="form-group">
            @Html.LabelFor(r => r.Category, new { @class = "col-md-2 control-label" })
            @Html.DropDownListFor(r => r.Category, new SelectList(Model.PossibleCategories), new { @class = "form-control  col-md-4" })
            @Html.ValidationMessageFor(r => r.Category, "", new { @class = "text-danger  col-md-4" })
        </div>
        <div class="form-horizontal">            
            <div id="products">
                <div class="form-group">
                    @Html.Label("Product 1:", new { @class = "col-md-2 control-label" })
                    @Html.EditorFor(r => r.Products)
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Add new product:</label>
            <div class="input-group col-md-7">
                <button type="button" class="btn btn-success " onclick="addProduct();" >Add</button>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(r => r.PreparingSteps, new { @class = "col-md-2 control-label" })
            @Html.TextAreaFor(r => r.PreparingSteps, new { @class = "form-control  col-md-4" })
            @Html.ValidationMessageFor(r => r.PreparingSteps, "", new { @class = "text-danger  col-md-4" })
        </div>
        <input type="submit" class="btn btn-primary" value="Submit" />
    }
</div>
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function addProduct() {
            var newIndex = $('#products input').length;

            var productNumber = newIndex + 1;
            var numberLabel = $('<label>')
                .addClass('col-md-2 control-label')
                .text(productNumber + ':');

            var newInput = $('#products input:last').clone();
            newInput.val('');
            newInput.attr('id', 'Products_' + newIndex + '__Content');
            newInput.attr('name', 'Products[' + newIndex + '].Content');

            var newValidation = $('#products .form-group [class*="field-validation"]:last').clone();
            newValidation.text('');
            newValidation.attr('data-valmsg-for', 'Products[' + newIndex + '].Content');


            var formGroup = $('<div>').addClass('form-group');
            formGroup.append(numberLabel);
            formGroup.append(newInput);
            formGroup.append(newValidation);
            $('#products').append(formGroup);

            //unobtrusive validation for the new fields
            var form = $("#create-form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
        };
    </script>
}
